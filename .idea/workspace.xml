<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5fc5b3a6-b0a9-4dd4-8b35-35615f9c9e66" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/emergencyresponsedemo_helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/emergencyresponsedemo_helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/emergencyresponsedemo_types.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/emergencyresponsedemo_types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/apis/erdemo/v1alpha1/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/emergencyresponsedemo_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/emergencyresponsedemo_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/emergencyresponsedemo_controller_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/emergencyresponsedemo_controller_test.go.old" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/builder.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/builder.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_error/handler_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_error/handler_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_init/handler_init.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_init/handler_init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_new/handler_new.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_new/handler_new.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_ready/handler_ready.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/handler_ready/handler_ready.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/service/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/service/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/status/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/status/errors.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/status/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/controller/emergencyresponsedemo/handlers/helpers/status/types.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/lib/kube/metahelper/metahelper.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/lib/kube/metahelper/metahelper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/lib/services/factory.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/lib/services/factory.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/lib/services/mapbox/mapbox.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/lib/services/mapbox/mapbox.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/lib/services/mapbox/mapbox_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/lib/services/mapbox/mapbox_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/lib/services/s3/s3.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/lib/services/s3/s3.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="$USER_HOME$/.local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1Q6FHyOH7YFcsAoO6Zz6KX60l8n" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg/lib/services/s3/backend" />
      <recent name="$PROJECT_DIR$/pkg/lib/services/s3/s3_backend" />
      <recent name="$PROJECT_DIR$/pkg/lib/services" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>direct</proxy>
  </component>
</project>